// <auto-generated />
using System;
using InvoiceManagerApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InvoiceManagerApp.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20210325210759_Add_Entities_To_Db")]
    partial class Add_Entities_To_Db
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InvoiceManagerApp.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BancoAgencia")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BancoConta")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BancoNome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("InvoiceManagerApp.Models.Fatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtEmissao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtVencimento")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdFornecedor")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdFornecedor");

                    b.ToTable("Fatura");
                });

            modelBuilder.Entity("InvoiceManagerApp.Models.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LinkLogin")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Vertical")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("InvoiceManagerApp.Models.Fatura", b =>
                {
                    b.HasOne("InvoiceManagerApp.Models.Cliente", "Cliente")
                        .WithMany("Faturas")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvoiceManagerApp.Models.Fornecedor", "Fornecedor")
                        .WithMany("Faturas")
                        .HasForeignKey("IdFornecedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("InvoiceManagerApp.Models.Cliente", b =>
                {
                    b.Navigation("Faturas");
                });

            modelBuilder.Entity("InvoiceManagerApp.Models.Fornecedor", b =>
                {
                    b.Navigation("Faturas");
                });
#pragma warning restore 612, 618
        }
    }
}
